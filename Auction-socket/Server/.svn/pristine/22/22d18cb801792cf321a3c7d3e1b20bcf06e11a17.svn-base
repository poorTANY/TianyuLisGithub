package dependency;
import java.sql.Connection;
import java.sql.Date;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Vector;

import javax.swing.table.DefaultTableModel;

public class Database {
	
	private Connection con;
	private Statement stmt;
	
	//table in database
	private String loginTable = "nameandpasswd";
	private String items = "items";
	private String users = "users";
	
	
	public void open(){
		
		String protocol = "postgresql";
		String server = "dbteach2.cs.bham.ac.uk";
		String port = "5432";
		
		//database
		String db = "miami";
		String driverName = "org.postgresql.Driver";
		
		//username and password
		String username = "dxx508";
		String password = "120873";
		
		String URL =
				"jdbc:" + protocol + "://" + server + ":" + port + "/" + db;

			Class driver = null;
			try {
				driver = Class.forName(driverName);
				DriverManager.registerDriver((Driver) driver.newInstance());
			} catch (ClassNotFoundException e) {
				System.err.println("Database driver not found");
				System.out.println(e);
				System.exit(1);
			} catch (Exception e) {
				System.err.println("Driver could not be registered");
				System.exit(1);
			}

			try {
				con = DriverManager.getConnection(URL, username, password);

				stmt = con.createStatement();

			} catch (SQLException e) {
				System.err.println("SQL Exception");
				System.err.println(e);
				System.exit(1);
			}

			System.out.println("database connected");
		
	}
	
	public void close() {
		try {
			stmt.close();
			con.close();
		} catch (Throwable e) {
		}
	}

	protected void finalize() throws Throwable {
		close();
		super.finalize();
	}

	public ResultSet runQuery(String q) {
		ResultSet rs = null;
		try {
			rs = stmt.executeQuery(q);
		} catch (SQLException e) {
			System.err.println(e);
			System.exit(1);
		}
		return rs;
	}
	
	public int update(String q) {
		try {
			return stmt.executeUpdate(q);
		} catch (SQLException e) {
			System.err.println(e);
			System.exit(1);
		}
		return 0;
	}
	
	/**
	 * method to check username
	 * @param username
	 * @return
	 * @throws SQLException
	 */
	public boolean checkUsername(String username) throws SQLException{
		
		String query = "SELECT username FROM " +loginTable+" where username = '"+username+"'";
		
		ResultSet result = runQuery(query);
		
		System.out.println("query runs");
		
		return result.next();
	}
	
	/**
	 * method to check password
	 * @param args
	 * @throws SQLException
	 */
	public boolean checkLogin(String username, String passwd) throws SQLException{
		
		String query = "SELECT password FROM " +loginTable+" where username = '"+username+"'";
		
		ResultSet result = runQuery(query);

		return ( result.next() && result.getString(1).equals(passwd));

	}
	
	/**
	 * Create new user in the database
	 * @param username
	 * @param passwd
	 */
	public void insert(String username, String passwd){
		
		String query = "INSERT INTO "+loginTable+" VALUES ('"+username+"','"+passwd+"')";
		
		update(query);
		
	}
	
	/**
	 * add item to the database
	 * @param name
	 * @param owner
	 * @param seller
	 * @param price
	 * @param duration
	 */
	public void addItem(String name, String owner, String seller, double price, int duration, double currentprice){
		
        Calendar cal = Calendar.getInstance();  
        
        int year = cal.get(Calendar.YEAR);  
        int month = cal.get(Calendar.MONTH) + 1; 
        int day = cal.get(Calendar.DAY_OF_MONTH);  
          
        int hour = cal.get(Calendar.HOUR_OF_DAY);  
        int minute = cal.get(Calendar.MINUTE);  
        int second = cal.get(Calendar.SECOND); 
        
        String begin = year+"-"+month+"-"+day+" "+hour+":"+minute+":"+second;
        
        cal.add(Calendar.HOUR,duration);
        
        year = cal.get(Calendar.YEAR);  
        month = cal.get(Calendar.MONTH) + 1; 
        day = cal.get(Calendar.DAY_OF_MONTH);  
          
        hour = cal.get(Calendar.HOUR_OF_DAY);  
        minute = cal.get(Calendar.MINUTE);  
        second = cal.get(Calendar.SECOND); 
        
        String end = year+"-"+month+"-"+day+" "+hour+":"+minute+":"+second;
		
		String query = "INSERT INTO "+items+"(name,owner,seller,price,begintime,endtime,currentprice) VALUES ('"+name+"','"+owner+"','"+seller+"',"+price+",'"+begin+"','"+end+"','"+currentprice+"')";
		
		System.out.println(query);
		
		update(query);

		
	}
	
	/**
	 * Get user from database
	 * @param username
	 * @return
	 * @throws SQLException
	 */
	public User getUser(String username) throws SQLException {

		String query = "SELECT name,coins FROM " + users + " where name = '" + username + "'";

		ResultSet result = runQuery(query);
		
		if(result.next()){
			
		return new User(result.getString(1),result.getDouble(2));
		}
		
		return new User(result.getString(1));

	}

	public DefaultTableModel buildTableModel(ResultSet rs)
	        throws SQLException {

	    ResultSetMetaData metaData = rs.getMetaData();

	    // names of columns
	    Vector<String> columnNames = new Vector<String>();
	    int columnCount = metaData.getColumnCount();
	    for (int column = 1; column <= columnCount; column++) {
	        columnNames.add(metaData.getColumnName(column));
	    }

	    // data of the table
	    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
	    while (rs.next()) {
	        Vector<Object> vector = new Vector<Object>();
	        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
	            vector.add(rs.getObject(columnIndex));
	        }
	        data.add(vector);
	    }

	    return new DefaultTableModel(data, columnNames);

	}
	

	public static void main(String[] args) throws SQLException{
		
		
		//test connection
		Database db = new Database();
		
		//db.addItem(1,"psp","xxx","yyy",1000,"2016-03-09 16:24:20","2016-03-10 16:24:20");
		
		// Date nowTime = new Date(System.currentTimeMillis());
	      //  System.out.println(nowTime.getHours());
		
		db.open();
		
		User dxx = db.getUser("dxx508");
		
		System.out.println(dxx.getCoins());
		
		//db.addItem("psp","","yyy",1000,2);
		
		//boolean b = db.checkLogin("dxx508","223456");
		//System.out.println(b);
		
		//db.insert("dxx111","123123");
		
		/*ResultSet result;
		
		try {
			result = db.runQuery("select * from staff");
		
		

			 while(result.next()){
			System.out.println(result.getArray(3));
			 }
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}*/
	}

}
